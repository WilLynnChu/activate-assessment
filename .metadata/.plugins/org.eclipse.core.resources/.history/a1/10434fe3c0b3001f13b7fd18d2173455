package testCases;


import keywords.GenericKeywords;
import keywords.Auth;
import keywords.Booking;

import org.apache.commons.csv.CSVFormat;
import org.apache.commons.csv.CSVParser;
import org.apache.commons.csv.CSVRecord;
import org.testng.annotations.DataProvider;
import org.testng.annotations.BeforeTest;
import org.testng.annotations.Test;

import java.io.FileReader;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Iterator;
import java.util.List;

public class US1TC2Booking extends Booking{
	
	static String test_data_file_name = "/US1TC2-data.csv";
	static String positive_json_schema_file_name = "/US1TC1-positive-json-schema.json";
	static String negative_json_schema_file_name = "/US1TC1-negative-json-schema.json";
	
	@BeforeTest
	public void testSetUp() {
		GenericKeywords.clearTestOutput(GenericKeywords.test_output_path);
	}
	
	@DataProvider(name = "csvDataProvider")
    public Iterator<Object[]> getCsvData() throws IOException {
        String csvFilePath = GenericKeywords.test_data_path + test_data_file_name; // Update with your CSV file path
        List<Object[]> data = new ArrayList<>();

        try (FileReader fileReader = new FileReader(csvFilePath);
             CSVParser csvParser = new CSVParser(fileReader, CSVFormat.DEFAULT.withHeader())) { // Use this to set the first row as header

            for (CSVRecord record : csvParser) {
                String testCaseName = record.get("test_case_name"); // Use the header column name
                // Add other columns as needed
                data.add(new Object[]{testCaseName, record});
            }
        }

        return data.iterator();
    }

    @Test(dataProvider = "csvDataProvider")
    public void US1TC2testWithCsvData(String testCaseName, CSVRecord record) {
        System.out.println("Running test: " + testCaseName);
        String firstname = record.get("firstname");
        String lastname = record.get("lastname");
        String additionalneeds = record.get("additionalneeds");
        String checkin = record.get("checkin");
        String checkout = record.get("checkout");
        String totalprice = record.get("totalprice");
        String depositpaid = record.get("depositpaid");
        String token = Auth.getAuthToken();
        String responseBody = updateBooking(token, firstname, lastname, additionalneeds, checkin, checkout, totalprice, depositpaid);
        GenericKeywords.validateJsonSchema(positive_json_schema_file_name, responseBody);
    }
}
